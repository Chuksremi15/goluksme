{
  "address": "0x1496008eB2646e8C4d8eA61a63bdA872f03de29b",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "dataId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalDonations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "CampaignClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "dataId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "CampaignCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Donated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "campaigns",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dataId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDonations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        }
      ],
      "name": "createCampaign",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getCampaign",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dataId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDonations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalWithdrawn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protocolWallet_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3d5e09c1dedd4b783087bffe6753dbd9f692561aa38b29e1734ed399b6d50b28",
  "receipt": {
    "to": null,
    "from": "0xDAADf6f9B33a1e01Be2A48765D77B116A2d5DF77",
    "contractAddress": "0x1496008eB2646e8C4d8eA61a63bdA872f03de29b",
    "transactionIndex": 0,
    "gasUsed": "1086196",
    "logsBloom": "0x
    "blockHash": "0xa3c9d2e0af1aa3d771976c9cc8e2bbabadc0ccec28405ac25ec65caf5938879e",
    "transactionHash": "0x3d5e09c1dedd4b783087bffe6753dbd9f692561aa38b29e1734ed399b6d50b28",
    "logs": [],
    "blockNumber": 5089800,
    "cumulativeGasUsed": "1086196",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d82a3c555f582de38dfff64690268657",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDonations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWithdrawn\",\"type\":\"uint256\"}],\"name\":\"CampaignClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"dataId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"CampaignCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Donated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDonations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_target\",\"type\":\"uint256\"}],\"name\":\"createCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCampaign\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDonations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalWithdrawn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protocolWallet_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CrowdFund.sol\":\"CrowdFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CrowdFund.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"./utils/Initializable.sol\\\";\\n\\ncontract CrowdFund is Initializable {\\n    struct Campaign {\\n        address owner;\\n        string title;\\n        string dataId;\\n        uint target;\\n        uint totalDonations;\\n        uint totalWithdrawn;\\n        uint donationCount;\\n    }\\n\\n    mapping(address => Campaign) public campaigns;\\n\\n    address public protocolWallet;\\n\\n    event CampaignCreated(string dataId, address indexed owner, string title, uint target);\\n    event CampaignClosed(\\n        address indexed owner,\\n        string title,\\n        string dataId,\\n        uint target,\\n        uint totalDonations,\\n        uint totalWithdrawn\\n    );\\n    event Donated(address indexed owner, address indexed donor, uint amount);\\n    event Withdrawn(address indexed owner, uint amount);\\n\\n    function initialize(address protocolWallet_) public initializer {\\n        protocolWallet = protocolWallet_;\\n    }\\n\\n    function createCampaign(string memory _title, string memory _dataId, uint _target) external {\\n        require(campaigns[msg.sender].owner == address(0), \\\"You already have a campaign\\\");\\n\\n        require(bytes(_title).length > 0, \\\"Title cannot be empty\\\");\\n        require(bytes(_dataId).length > 0, \\\"Data ID cannot be empty\\\");\\n        require(_target > 0, \\\"Target must be greater than zero\\\");\\n\\n        Campaign storage newCampaign = campaigns[msg.sender];\\n        newCampaign.owner = msg.sender;\\n        newCampaign.title = _title;\\n        newCampaign.dataId = _dataId;\\n        newCampaign.target = _target;\\n        newCampaign.donationCount = 0;\\n\\n        emit CampaignCreated(_dataId, msg.sender, _title, _target);\\n    }\\n\\n    function donate(address _owner) external payable {\\n        Campaign storage campaign = campaigns[_owner];\\n        require(campaign.owner != address(0), \\\"Campaign does not exist\\\");\\n        require(msg.value > 0, \\\"Must send LKS\\\");\\n\\n        campaign.totalDonations += msg.value;\\n        campaign.donationCount++;\\n\\n        emit Donated(_owner, msg.sender, msg.value);\\n    }\\n\\n    function withdraw() external {\\n        Campaign storage campaign = campaigns[msg.sender];\\n        require(campaign.owner != address(0), \\\"Campaign does not exist\\\");\\n\\n        uint amount = campaign.totalDonations - campaign.totalWithdrawn;\\n\\n        require(amount > 0, \\\"cannot withdraw 0\\\");\\n\\n        uint fee = (amount * 30) / 10000;\\n        uint amountAfterFee = amount - fee;\\n\\n        campaign.totalWithdrawn += amount;\\n\\n        (bool feeSent, ) = payable(protocolWallet).call{ value: fee }(\\\"\\\");\\n        require(feeSent, \\\"Failed to send fee\\\");\\n\\n        (bool sent, ) = payable(campaign.owner).call{ value: amountAfterFee }(\\\"\\\");\\n        require(sent, \\\"Failed to send funds\\\");\\n\\n        emit Withdrawn(msg.sender, amount);\\n    }\\n\\n    function closeCampaign() external {\\n        Campaign storage campaign = campaigns[msg.sender];\\n        require(campaign.owner != address(0), \\\"Campaign does not exist\\\");\\n\\n        uint remainingAmount = campaign.totalDonations - campaign.totalWithdrawn;\\n        if (remainingAmount > 0) {\\n            uint fee = (remainingAmount * 30) / 10000;\\n            uint amountAfterFee = remainingAmount - fee;\\n\\n            campaign.totalWithdrawn += remainingAmount;\\n\\n            (bool feeSent, ) = payable(protocolWallet).call{ value: fee }(\\\"\\\");\\n            require(feeSent, \\\"Failed to send fee\\\");\\n\\n            (bool sent, ) = payable(campaign.owner).call{ value: amountAfterFee }(\\\"\\\");\\n            require(sent, \\\"Failed to send funds\\\");\\n\\n            emit Withdrawn(msg.sender, remainingAmount);\\n        }\\n\\n        emit CampaignClosed(\\n            msg.sender,\\n            campaign.title,\\n            campaign.dataId,\\n            campaign.target,\\n            campaign.totalDonations,\\n            campaign.totalWithdrawn\\n        );\\n\\n        delete campaigns[msg.sender];\\n    }\\n\\n    function getCampaign(\\n        address _owner\\n    )\\n        external\\n        view\\n        returns (\\n            address owner,\\n            string memory title,\\n            string memory dataId,\\n            uint target,\\n            uint totalDonations,\\n            uint totalWithdrawn,\\n            uint donationCount\\n        )\\n    {\\n        Campaign storage campaign = campaigns[_owner];\\n\\n        require(campaign.owner != address(0), \\\"Campaign does not exist\\\");\\n\\n        return (\\n            campaign.owner,\\n            campaign.title,\\n            campaign.dataId,\\n            campaign.target,\\n            campaign.totalDonations,\\n            campaign.totalWithdrawn,\\n            campaign.donationCount\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xbbab2cb8f124587a0467aa8260ba6d08018c702f9f1e76f9f9a89a1b2265a769\",\"license\":\"UNLICENSED\"},\"contracts/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity ^0.8.0;\\n\\nabstract contract Initializable {\\n    bool private _initialized;\\n\\n    bool private _initializing;\\n\\n    modifier initializer() {\\n        require(\\n            _initializing || !_initialized,\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x63f6be15c862cea70ceaaa7c5ff9e167de1bdfdca161f699fca8e117fd7b0476\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112b0806100206000396000f3fe60806040526004361061007a5760003560e01c8063731301cf1161004e578063731301cf14610119578063c4d66de814610139578063d7557f1814610159578063ffa56a571461016e57600080fd5b8062362a951461007f57806306d6e63f146100945780631601d0b5146100d15780633ccfd60b14610104575b600080fd5b61009261008d366004610d8d565b61018e565b005b3480156100a057600080fd5b506002546100b4906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100dd57600080fd5b506100f16100ec366004610d8d565b610285565b6040516100c89796959493929190610e03565b34801561011057600080fd5b506100926103db565b34801561012557600080fd5b506100f1610134366004610d8d565b61061e565b34801561014557600080fd5b50610092610154366004610d8d565b6107cd565b34801561016557600080fd5b5061009261089c565b34801561017a57600080fd5b50610092610189366004610f03565b610b56565b6001600160a01b03808216600090815260016020526040902080549091166101d15760405162461bcd60e51b81526004016101c890610f70565b60405180910390fd5b600034116102115760405162461bcd60e51b815260206004820152600d60248201526c4d7573742073656e64204c4b5360981b60448201526064016101c8565b348160040160008282546102259190610fbd565b909155505060068101805490600061023c83610fd6565b909155505060405134815233906001600160a01b038416907f4dfff917e1fbb261a082e98cc7d43029621f6a6eb05ff3fef1510d5f1eb4857c9060200160405180910390a35050565b6001602081905260009182526040909120805491810180546001600160a01b03909316926102b290610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90610fef565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b50505050509080600201805461034090610fef565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90610fef565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b5050505050908060030154908060040154908060050154908060060154905087565b33600090815260016020526040902080546001600160a01b03166104115760405162461bcd60e51b81526004016101c890610f70565b6000816005015482600401546104279190611029565b90506000811161046d5760405162461bcd60e51b8152602060048201526011602482015270063616e6e6f74207769746864726177203607c1b60448201526064016101c8565b600061271061047d83601e61103c565b6104879190611053565b905060006104958284611029565b9050828460050160008282546104ab9190610fbd565b90915550506002546040516000916001600160a01b03169084908381818185875af1925050503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b50509050806105485760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f2073656e642066656560701b60448201526064016101c8565b84546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610594576040519150601f19603f3d011682016040523d82523d6000602084013e610599565b606091505b50509050806105e15760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e642066756e647360601b60448201526064016101c8565b60405185815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050505050565b6001600160a01b03808216600090815260016020526040812080549192606092839285928392839283929091166106675760405162461bcd60e51b81526004016101c890610f70565b8060000160009054906101000a90046001600160a01b0316816001018260020183600301548460040154856005015486600601548580546106a790610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546106d390610fef565b80156107205780601f106106f557610100808354040283529160200191610720565b820191906000526020600020905b81548152906001019060200180831161070357829003601f168201915b5050505050955084805461073390610fef565b80601f016020809104026020016040519081016040528092919081815260200182805461075f90610fef565b80156107ac5780601f10610781576101008083540402835291602001916107ac565b820191906000526020600020905b81548152906001019060200180831161078f57829003601f168201915b50505050509450975097509750975097509750975050919395979092949650565b600054610100900460ff16806107e6575060005460ff16155b6108495760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c8565b600054610100900460ff1615801561086b576000805461ffff19166101011790555b600280546001600160a01b0319166001600160a01b0384161790558015610898576000805461ff00191690555b5050565b33600090815260016020526040902080546001600160a01b03166108d25760405162461bcd60e51b81526004016101c890610f70565b6000816005015482600401546108e89190611029565b90508015610a9e57600061271061090083601e61103c565b61090a9190611053565b905060006109188284611029565b90508284600501600082825461092e9190610fbd565b90915550506002546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610980576040519150601f19603f3d011682016040523d82523d6000602084013e610985565b606091505b50509050806109cb5760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f2073656e642066656560701b60448201526064016101c8565b84546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b5050905080610a645760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e642066756e647360601b60448201526064016101c8565b60405185815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050505b336001600160a01b03167f6bba8e76293ddb0d1bd20603b4f0f63aab75309d1cb905cc40939ddebcdbe4178360010184600201856003015486600401548760050154604051610af19594939291906110f2565b60405180910390a2336000908152600160208190526040822080546001600160a01b03191681559190610b2690830182610d37565b610b34600283016000610d37565b5060006003820181905560048201819055600582018190556006909101555050565b336000908152600160205260409020546001600160a01b031615610bbc5760405162461bcd60e51b815260206004820152601b60248201527f596f7520616c7265616479206861766520612063616d706169676e000000000060448201526064016101c8565b6000835111610c055760405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b60448201526064016101c8565b6000825111610c565760405162461bcd60e51b815260206004820152601760248201527f446174612049442063616e6e6f7420626520656d70747900000000000000000060448201526064016101c8565b60008111610ca65760405162461bcd60e51b815260206004820181905260248201527f546172676574206d7573742062652067726561746572207468616e207a65726f60448201526064016101c8565b33600081815260016020819052604090912080546001600160a01b03191690921782558101610cd58582611184565b5060028101610ce48482611184565b50600381018290556000600682015560405133907f61c60b155d9e4501edf54e2039ef889bfc415b47237550572ecd1cbde9f82da690610d2990869088908790611244565b60405180910390a250505050565b508054610d4390610fef565b6000825580601f10610d53575050565b601f016020900490600052602060002090810190610d719190610d74565b50565b5b80821115610d895760008155600101610d75565b5090565b600060208284031215610d9f57600080fd5b81356001600160a01b0381168114610db657600080fd5b9392505050565b6000815180845260005b81811015610de357602081850181015186830182015201610dc7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038816815260e060208201819052600090610e2790830189610dbd565b8281036040840152610e398189610dbd565b9150508560608301528460808301528360a08301528260c083015298975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e8757600080fd5b813567ffffffffffffffff80821115610ea257610ea2610e60565b604051601f8301601f19908116603f01168101908282118183101715610eca57610eca610e60565b81604052838152866020858801011115610ee357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f1857600080fd5b833567ffffffffffffffff80821115610f3057600080fd5b610f3c87838801610e76565b94506020860135915080821115610f5257600080fd5b50610f5f86828701610e76565b925050604084013590509250925092565b60208082526017908201527f43616d706169676e20646f6573206e6f74206578697374000000000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610fd057610fd0610fa7565b92915050565b600060018201610fe857610fe8610fa7565b5060010190565b600181811c9082168061100357607f821691505b60208210810361102357634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610fd057610fd0610fa7565b8082028115828204841417610fd057610fd0610fa7565b60008261107057634e487b7160e01b600052601260045260246000fd5b500490565b6000815461108281610fef565b80855260206001838116801561109f57600181146110b9576110e7565b60ff1985168884015283151560051b8801830195506110e7565b866000528260002060005b858110156110df5781548a82018601529083019084016110c4565b890184019650505b505050505092915050565b60a08152600061110560a0830188611075565b82810360208401526111178188611075565b60408401969096525050606081019290925260809091015292915050565b601f82111561117f57600081815260208120601f850160051c8101602086101561115c5750805b601f850160051c820191505b8181101561117b57828155600101611168565b5050505b505050565b815167ffffffffffffffff81111561119e5761119e610e60565b6111b2816111ac8454610fef565b84611135565b602080601f8311600181146111e757600084156111cf5750858301515b600019600386901b1c1916600185901b17855561117b565b600085815260208120601f198616915b82811015611216578886015182559484019460019091019084016111f7565b50858210156112345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260006112576060830186610dbd565b82810360208401526112698186610dbd565b91505082604083015294935050505056fea26469706673582212205f75d5308c2dbf770b3a67ccc879f76ff0f3a49f8420e056154b2c272ef952e264736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061007a5760003560e01c8063731301cf1161004e578063731301cf14610119578063c4d66de814610139578063d7557f1814610159578063ffa56a571461016e57600080fd5b8062362a951461007f57806306d6e63f146100945780631601d0b5146100d15780633ccfd60b14610104575b600080fd5b61009261008d366004610d8d565b61018e565b005b3480156100a057600080fd5b506002546100b4906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100dd57600080fd5b506100f16100ec366004610d8d565b610285565b6040516100c89796959493929190610e03565b34801561011057600080fd5b506100926103db565b34801561012557600080fd5b506100f1610134366004610d8d565b61061e565b34801561014557600080fd5b50610092610154366004610d8d565b6107cd565b34801561016557600080fd5b5061009261089c565b34801561017a57600080fd5b50610092610189366004610f03565b610b56565b6001600160a01b03808216600090815260016020526040902080549091166101d15760405162461bcd60e51b81526004016101c890610f70565b60405180910390fd5b600034116102115760405162461bcd60e51b815260206004820152600d60248201526c4d7573742073656e64204c4b5360981b60448201526064016101c8565b348160040160008282546102259190610fbd565b909155505060068101805490600061023c83610fd6565b909155505060405134815233906001600160a01b038416907f4dfff917e1fbb261a082e98cc7d43029621f6a6eb05ff3fef1510d5f1eb4857c9060200160405180910390a35050565b6001602081905260009182526040909120805491810180546001600160a01b03909316926102b290610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90610fef565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b50505050509080600201805461034090610fef565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90610fef565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b5050505050908060030154908060040154908060050154908060060154905087565b33600090815260016020526040902080546001600160a01b03166104115760405162461bcd60e51b81526004016101c890610f70565b6000816005015482600401546104279190611029565b90506000811161046d5760405162461bcd60e51b8152602060048201526011602482015270063616e6e6f74207769746864726177203607c1b60448201526064016101c8565b600061271061047d83601e61103c565b6104879190611053565b905060006104958284611029565b9050828460050160008282546104ab9190610fbd565b90915550506002546040516000916001600160a01b03169084908381818185875af1925050503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b50509050806105485760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f2073656e642066656560701b60448201526064016101c8565b84546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610594576040519150601f19603f3d011682016040523d82523d6000602084013e610599565b606091505b50509050806105e15760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e642066756e647360601b60448201526064016101c8565b60405185815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050505050565b6001600160a01b03808216600090815260016020526040812080549192606092839285928392839283929091166106675760405162461bcd60e51b81526004016101c890610f70565b8060000160009054906101000a90046001600160a01b0316816001018260020183600301548460040154856005015486600601548580546106a790610fef565b80601f01602080910402602001604051908101604052809291908181526020018280546106d390610fef565b80156107205780601f106106f557610100808354040283529160200191610720565b820191906000526020600020905b81548152906001019060200180831161070357829003601f168201915b5050505050955084805461073390610fef565b80601f016020809104026020016040519081016040528092919081815260200182805461075f90610fef565b80156107ac5780601f10610781576101008083540402835291602001916107ac565b820191906000526020600020905b81548152906001019060200180831161078f57829003601f168201915b50505050509450975097509750975097509750975050919395979092949650565b600054610100900460ff16806107e6575060005460ff16155b6108495760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c8565b600054610100900460ff1615801561086b576000805461ffff19166101011790555b600280546001600160a01b0319166001600160a01b0384161790558015610898576000805461ff00191690555b5050565b33600090815260016020526040902080546001600160a01b03166108d25760405162461bcd60e51b81526004016101c890610f70565b6000816005015482600401546108e89190611029565b90508015610a9e57600061271061090083601e61103c565b61090a9190611053565b905060006109188284611029565b90508284600501600082825461092e9190610fbd565b90915550506002546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610980576040519150601f19603f3d011682016040523d82523d6000602084013e610985565b606091505b50509050806109cb5760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f2073656e642066656560701b60448201526064016101c8565b84546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610a17576040519150601f19603f3d011682016040523d82523d6000602084013e610a1c565b606091505b5050905080610a645760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e642066756e647360601b60448201526064016101c8565b60405185815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050505b336001600160a01b03167f6bba8e76293ddb0d1bd20603b4f0f63aab75309d1cb905cc40939ddebcdbe4178360010184600201856003015486600401548760050154604051610af19594939291906110f2565b60405180910390a2336000908152600160208190526040822080546001600160a01b03191681559190610b2690830182610d37565b610b34600283016000610d37565b5060006003820181905560048201819055600582018190556006909101555050565b336000908152600160205260409020546001600160a01b031615610bbc5760405162461bcd60e51b815260206004820152601b60248201527f596f7520616c7265616479206861766520612063616d706169676e000000000060448201526064016101c8565b6000835111610c055760405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b60448201526064016101c8565b6000825111610c565760405162461bcd60e51b815260206004820152601760248201527f446174612049442063616e6e6f7420626520656d70747900000000000000000060448201526064016101c8565b60008111610ca65760405162461bcd60e51b815260206004820181905260248201527f546172676574206d7573742062652067726561746572207468616e207a65726f60448201526064016101c8565b33600081815260016020819052604090912080546001600160a01b03191690921782558101610cd58582611184565b5060028101610ce48482611184565b50600381018290556000600682015560405133907f61c60b155d9e4501edf54e2039ef889bfc415b47237550572ecd1cbde9f82da690610d2990869088908790611244565b60405180910390a250505050565b508054610d4390610fef565b6000825580601f10610d53575050565b601f016020900490600052602060002090810190610d719190610d74565b50565b5b80821115610d895760008155600101610d75565b5090565b600060208284031215610d9f57600080fd5b81356001600160a01b0381168114610db657600080fd5b9392505050565b6000815180845260005b81811015610de357602081850181015186830182015201610dc7565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038816815260e060208201819052600090610e2790830189610dbd565b8281036040840152610e398189610dbd565b9150508560608301528460808301528360a08301528260c083015298975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e8757600080fd5b813567ffffffffffffffff80821115610ea257610ea2610e60565b604051601f8301601f19908116603f01168101908282118183101715610eca57610eca610e60565b81604052838152866020858801011115610ee357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610f1857600080fd5b833567ffffffffffffffff80821115610f3057600080fd5b610f3c87838801610e76565b94506020860135915080821115610f5257600080fd5b50610f5f86828701610e76565b925050604084013590509250925092565b60208082526017908201527f43616d706169676e20646f6573206e6f74206578697374000000000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610fd057610fd0610fa7565b92915050565b600060018201610fe857610fe8610fa7565b5060010190565b600181811c9082168061100357607f821691505b60208210810361102357634e487b7160e01b600052602260045260246000fd5b50919050565b81810381811115610fd057610fd0610fa7565b8082028115828204841417610fd057610fd0610fa7565b60008261107057634e487b7160e01b600052601260045260246000fd5b500490565b6000815461108281610fef565b80855260206001838116801561109f57600181146110b9576110e7565b60ff1985168884015283151560051b8801830195506110e7565b866000528260002060005b858110156110df5781548a82018601529083019084016110c4565b890184019650505b505050505092915050565b60a08152600061110560a0830188611075565b82810360208401526111178188611075565b60408401969096525050606081019290925260809091015292915050565b601f82111561117f57600081815260208120601f850160051c8101602086101561115c5750805b601f850160051c820191505b8181101561117b57828155600101611168565b5050505b505050565b815167ffffffffffffffff81111561119e5761119e610e60565b6111b2816111ac8454610fef565b84611135565b602080601f8311600181146111e757600084156111cf5750858301515b600019600386901b1c1916600185901b17855561117b565b600085815260208120601f198616915b82811015611216578886015182559484019460019091019084016111f7565b50858210156112345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260006112576060830186610dbd565b82810360208401526112698186610dbd565b91505082604083015294935050505056fea26469706673582212205f75d5308c2dbf770b3a67ccc879f76ff0f3a49f8420e056154b2c272ef952e264736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 506,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 508,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 24,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "campaigns",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Campaign)19_storage)"
      },
      {
        "astId": 26,
        "contract": "contracts/CrowdFund.sol:CrowdFund",
        "label": "protocolWallet",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Campaign)19_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct CrowdFund.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)19_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)19_storage": {
        "encoding": "inplace",
        "label": "struct CrowdFund.Campaign",
        "members": [
          {
            "astId": 6,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 10,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "dataId",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "target",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "totalDonations",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "totalWithdrawn",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 18,
            "contract": "contracts/CrowdFund.sol:CrowdFund",
            "label": "donationCount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}